## Multi-stage build for managing dev dependencies

# Compilation build stage
FROM golang:1.12-alpine3.10 as builder
RUN mkdir /src
WORKDIR /src
COPY go.mod .
COPY go.sum .
RUN apk update && apk add --update --no-cache ca-certificates make git && update-ca-certificates 2>/dev/null || true
RUN go mod download
ADD . /src/
RUN make go-build-worker

# Distribution build stage
FROM alpine:3.10.0
RUN apk add --update --no-cache dumb-init su-exec ca-certificates
COPY --from=builder /src/build/worker /app/
COPY deployments/entrypoint.sh /app/
ENV WORKDIR=/app
ENV DUMB_INIT_SETSID=0
WORKDIR /app
RUN chmod +x entrypoint.sh
COPY deployments/ca-certificates/ /usr/local/share/ca-certificates/
RUN update-ca-certificates
ENTRYPOINT ["/app/entrypoint.sh", "$app_name-worker"]
