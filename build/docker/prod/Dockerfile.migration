# Stage 1 - Compilation build stage
######################################
FROM golang:1.14-alpine3.12 as builder

ARG GIT_TOKEN
ENV CGO_ENABLED 0

RUN mkdir /src
WORKDIR /src

RUN apk add --update --no-cache --repository https://dl-4.alpinelinux.org/alpine/latest-stable/community/ make git

# Avoid copying the whole source code first since that will invalidate
# cache for all further layers
COPY go.mod .
COPY go.sum .

# Get dependencies using go.mod and go.sum
# This step should be cached unless we modify go.mod/go.sum
RUN set -eux && \
    echo 'exec echo ${GIT_TOKEN}' > /tmp/askpass.sh && \
    chmod +x /tmp/askpass.sh && \
    export GIT_ASKPASS=/tmp/askpass.sh && \
    go mod download

# Copy rest of the source code
ADD . /src/

RUN make go-build-migration


# Stage 2 - Binary build stage
######################################
FROM alpine:3.12
ARG GIT_COMMIT_HASH

COPY --from=builder /src/bin/migration /app/
COPY --from=builder /src/config/ /app/config/
COPY --from=builder /src/internal/database/migrations /app/internal/database/migrations/

COPY build/docker/probe.sh /app/
COPY build/docker/migration-entrypoint.sh /app/

ENV WORKDIR=/app
ENV DUMB_INIT_SETSID=0
WORKDIR /app

RUN apk add --update --no-cache dumb-init
ENV GIT_COMMIT_HASH=${GIT_COMMIT_HASH}
RUN mkdir -p /app/public && \
    echo "$GIT_COMMIT_HASH" > /app/public/commit.txt

RUN chmod +x migration-entrypoint.sh probe.sh
ENTRYPOINT ["/app/migration-entrypoint.sh"]
