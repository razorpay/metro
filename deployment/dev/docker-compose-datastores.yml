version: '3.3'
services:
  pulsar:
    image: apachepulsar/pulsar:2.6.2
    container_name: metro-pulsar
    entrypoint: ["bin/pulsar","standalone"]
    networks:
      - app-network
    ports:
      - "6650:6650"
      - "8080:8080"
    healthcheck:
      test: ["CMD","bin/pulsar-admin","brokers","healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: kafka-zookeeper
    networks:
      - app-network
    container_name: metro-kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-server:6.0.0
    hostname: kafka-broker
    networks:
      - app-network
    container_name: metro-kafka-broker
    depends_on:
      - kafka-zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  consul:
    image: consul:1.9.0
    container_name: metro-consul
    networks:
      - app-network
    ports:
      - "8500:8500"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8500"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge
