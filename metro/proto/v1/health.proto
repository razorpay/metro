// (c) metro 2020
syntax = "proto3";

package metro.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/razorpay/metro-proto/metro/proto/v1;metrov1";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/razorpay/metro-proto";
    description: "protobuf definitions for metro";
  }
  schemes: HTTPS;
};

// HealthCheckAPI defines the health check service.
service HealthCheckAPI {
  // Check returns HealthCheckResponse for the requested service.
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse) {
    option (google.api.http) = {
      // Route to this method from GET requests to /v1/healthcheck
      get: "/v1/healthcheck"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Do a healthcheck"
      description: "Do a healthcheck on the server."
      tags: "Healthcheck"
    };
  }
}

message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  // ServingStatus denotes the status of the service.
  enum ServingStatus {
    SERVING_STATUS_INVALID = 0;
    SERVING_STATUS_UNKNOWN = 1;
    SERVING_STATUS_SERVING = 2;
    SERVING_STATUS_NOT_SERVING = 3;
  }
  ServingStatus serving_status = 1;
}
